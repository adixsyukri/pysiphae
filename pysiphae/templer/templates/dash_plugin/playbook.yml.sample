- hosts: server
  remote_user: root
  vars:
      name: pysiphae
      effective_user: pysiphae
      repo_url: 
      install_path: /opt/pysiphae
      repozewho_tkt_secret: secret
      repozewho_cookie_name: pysiphae
      repozewho_ldap_url: ldap://ldaphost
      repozewho_ldap_basedn: cn=users,dc=site,dc=org
      repozewho_ldap_binddn: uid=admin,cn=users,dc=site,dc=org
      repozewho_ldap_bindpass: pass
#      db_name: pysiphae
#      db_type: mysql 
  tasks:
      - name: install python deps
        yum: name=git,python-devel,python,python-virtualenv,python-setuptools
      - name: install lib deps
        yum: name=cyrus-sasl-devel,openldap-devel,libxml2-devel,libxslt-devel
      - name: install mysql deps
        yum: name=mariadb,mariadb-server,mariadb-devel
      - name: install npm
        yum: name=npm
      - name: install bower
        command: npm install -g bower
        args:
            creates: /usr/bin/bower
      - name: install supervisor
        yum: name=supervisor
      - name: create user
        user: name={{ effective_user }} shell=/bin/bash
      - name: checkout app
        git: repo={{ repo_url }}
             dest={{ install_path }}
             update=yes

      - name: generate repoze.who config
        template: src=who-prod.ini_tmpl dest={{ install_path }}/who-prod.ini

      - name: copy github config
        copy: src=github.cfg dest={{ install_path }}/github.cfg

      - name: chown
        command: chown -R {{ effective_user }}:{{ effective_user }} {{ install_path }}
      - stat: path={{ install_path }}/bin/develop
        register: develop_script

      - name: update sources
        command: sudo -u {{ effective_user }} ./bin/develop up -f
        when: develop_script.stat.exists
        args:
            chdir: "{{ install_path }}"

      - name: build app
        command: sudo -u {{ effective_user }} ./build.sh
        args:
            chdir: "{{ install_path }}"

      - name: start mysql
        service: name=mariadb state=restarted enabled=yes

#      - name: create database
#        mysql_db: name={{ db_name }}
#        args:
#            creates: /var/lib/mysql/{{ db_name }}
#        when: db_type == 'mysql'
#
#      - name: grant permission to database
#        command: mysql {{ db_name }} --execute "grant all on {{ db_name }}.* to {{ effective_user }}@localhost"
#
      - name: install supervisord config
        template: src=supervisord.ini_tmpl dest=/etc/supervisord.d/{{ name }}.ini

      - name: start supervisord on boot
        service: name=supervisord state=restarted enabled=yes
